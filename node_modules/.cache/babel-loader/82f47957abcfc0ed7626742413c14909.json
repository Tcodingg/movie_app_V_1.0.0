{"ast":null,"code":"var _jsxFileName = \"/Users/deprincio/Documents/2. Web Dev/Practice/React/Movie App/movie_app_v_1.0/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react'; // require('dotenv').config();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const ApiKey = process.env.REACT_APP_API_KEY;\n  const API_KEY = 'aa612f293de8cfae23f3d56312b5f998';\n  const [allData, setAllData] = useState(null);\n  const mainUrl = `https://api.themoviedb.org/3/movie/550?api_key=${API_KEY}`;\n  const popularUrl = `https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n  const pagesUrl = `https://api.themoviedb.org/3/search/movie?query=Avengers&api_key=${API_KEY}&page=1`;\n  const keywordsUrl = ` https://api.themoviedb.org/3/movie/{movie_id}/keywords?api_key=${API_KEY}`;\n  const images = 'https://image.tmdb.org/t/p/w500';\n  let queryUrl = {\n    url: 'https://api.themoviedb.org/3/search/movie?',\n    api_key: API_KEY,\n    query: ''\n  };\n  const [movieInfo, setMovieInfo] = useState([]);\n  const [inputVal, setInputVal] = useState('');\n  const [api, setApi] = useState(null);\n  useEffect(() => {\n    // if (inputVal.length > 0) {\n    // \tsetApi(pagesUrl);\n    // \tfetch(api);\n    // } else {\n    // \tsetApi(popularUrl);\n    // }\n    async function fetch(api = popularUrl) {\n      const {\n        data: {\n          results\n        }\n      } = await axios.get(api);\n      setMovieInfo(() => results.filter(img => img.poster_path !== null));\n    }\n\n    fetch();\n  }, []);\n\n  function handleInput(e) {\n    const query = e.target.value; // setInputVal(query);\n  }\n\n  function reUsableComponent(info) {\n    info.map(movie => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieContent\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"images\",\n          src: `${images}${movie.poster_path}`\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this);\n    });\n  }\n\n  console.log(movieInfo);\n  console.log(reUsableComponent(movieInfo));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleInput,\n        placeholder: \"Search...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieContent\",\n        children: movieInfo.map(movie => {\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"images\",\n            src: `${images}${movie.poster_path}`\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 8\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"x9LOH+8TB7tnBJg1XbeVSPpg2dA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/deprincio/Documents/2. Web Dev/Practice/React/Movie App/movie_app_v_1.0/src/App.js"],"names":["axios","React","useState","useEffect","App","ApiKey","process","env","REACT_APP_API_KEY","API_KEY","allData","setAllData","mainUrl","popularUrl","pagesUrl","keywordsUrl","images","queryUrl","url","api_key","query","movieInfo","setMovieInfo","inputVal","setInputVal","api","setApi","fetch","data","results","get","filter","img","poster_path","handleInput","e","target","value","reUsableComponent","info","map","movie","id","console","log"],"mappings":"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","sourcesContent":["import './App.css';\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\n// require('dotenv').config();\n\nfunction App() {\n\tconst ApiKey = process.env.REACT_APP_API_KEY;\n\tconst API_KEY = 'aa612f293de8cfae23f3d56312b5f998';\n\tconst [allData, setAllData] = useState(null);\n\tconst mainUrl = `https://api.themoviedb.org/3/movie/550?api_key=${API_KEY}`;\n\tconst popularUrl = `https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n\tconst pagesUrl = `https://api.themoviedb.org/3/search/movie?query=Avengers&api_key=${API_KEY}&page=1`;\n\tconst keywordsUrl = ` https://api.themoviedb.org/3/movie/{movie_id}/keywords?api_key=${API_KEY}`;\n\tconst images = 'https://image.tmdb.org/t/p/w500';\n\tlet queryUrl = {\n\t\turl: 'https://api.themoviedb.org/3/search/movie?',\n\t\tapi_key: API_KEY,\n\t\tquery: '',\n\t};\n\tconst [movieInfo, setMovieInfo] = useState([]);\n\tconst [inputVal, setInputVal] = useState('');\n\tconst [api, setApi] = useState(null);\n\n\tuseEffect(() => {\n\t\t// if (inputVal.length > 0) {\n\t\t// \tsetApi(pagesUrl);\n\t\t// \tfetch(api);\n\t\t// } else {\n\t\t// \tsetApi(popularUrl);\n\t\t// }\n\t\tasync function fetch(api = popularUrl) {\n\t\t\tconst {\n\t\t\t\tdata: { results },\n\t\t\t} = await axios.get(api);\n\t\t\tsetMovieInfo(() => results.filter((img) => img.poster_path !== null));\n\t\t}\n\t\tfetch();\n\t}, []);\n\n\tfunction handleInput(e) {\n\t\tconst query = e.target.value;\n\t\t// setInputVal(query);\n\t}\n\n\tfunction reUsableComponent(info) {\n\t\tinfo.map((movie) => {\n\t\t\treturn (\n\t\t\t\t<div className='movieContent'>\n\t\t\t\t\t<img\n\t\t\t\t\t\tkey={movie.id}\n\t\t\t\t\t\tclassName='images'\n\t\t\t\t\t\tsrc={`${images}${movie.poster_path}`}\n\t\t\t\t\t></img>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t}\n\tconsole.log(movieInfo);\n\n\tconsole.log(reUsableComponent(movieInfo));\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<div>\n\t\t\t\t<h1>Movie</h1>\n\t\t\t\t<input onChange={handleInput} placeholder='Search...' />\n\t\t\t</div>\n\t\t\t<div className='content-wrapper'>\n\t\t\t\t<div className='movieContent'>\n\t\t\t\t\t{movieInfo.map((movie) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tkey={movie.id}\n\t\t\t\t\t\t\t\tclassName='images'\n\t\t\t\t\t\t\t\tsrc={`${images}${movie.poster_path}`}\n\t\t\t\t\t\t\t></img>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t\t{/* {reUsableComponent(movieInfo)} */}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}