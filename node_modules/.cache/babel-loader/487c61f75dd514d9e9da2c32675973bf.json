{"ast":null,"code":"var _jsxFileName = \"/Users/deprincio/Documents/2. Web Dev/Practice/React/Movie App/movie_app_v_1.0/src/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Search() {\n  _s();\n\n  const url = 'https://api.themoviedb.org/3/search/movie?';\n  const API_KEY = process.env.REACT_APP_MOVIEDB_API_KEY;\n  const [movieSearch, setMovieSearch] = useState([]);\n  const queryInput = useSelector(state => state.getMovie);\n  const images = 'https://image.tmdb.org/t/p/w500'; // function handleClick() {\n  // \tconsole.log(movie);\n  // }\n\n  useEffect(() => {\n    const fetchsearch = async () => {\n      const {\n        data: {\n          results\n        }\n      } = await axios.get(url, {\n        params: {\n          api_key: API_KEY,\n          query: queryInput\n        }\n      });\n      setMovieSearch(() => results.filter(img => img.poster_path !== null));\n    };\n\n    fetchsearch();\n    console.log(movieSearch);\n  }, [queryInput]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: movieSearch.map(details => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: details.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${images}${details.poster_path}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: details.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }, this)]\n      }, details.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 6\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Search, \"mErkjD6q2E8tterj3LTXLvygQFw=\", false, function () {\n  return [useSelector];\n});\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/deprincio/Documents/2. Web Dev/Practice/React/Movie App/movie_app_v_1.0/src/Search.js"],"names":["React","useEffect","useState","useSelector","axios","Search","url","API_KEY","process","env","REACT_APP_MOVIEDB_API_KEY","movieSearch","setMovieSearch","queryInput","state","getMovie","images","fetchsearch","data","results","get","params","api_key","query","filter","img","poster_path","console","log","map","details","title","overview","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAChC,QAAMC,GAAG,GAAG,4CAAZ;AACA,QAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,yBAA5B;AAEA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMW,UAAU,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,QAAlB,CAA9B;AACA,QAAMC,MAAM,GAAG,iCAAf,CANgC,CAQhC;AACA;AACA;;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMgB,WAAW,GAAG,YAAY;AAC/B,YAAM;AACLC,QAAAA,IAAI,EAAE;AAAEC,UAAAA;AAAF;AADD,UAEF,MAAMf,KAAK,CAACgB,GAAN,CAAUd,GAAV,EAAe;AACxBe,QAAAA,MAAM,EAAE;AACPC,UAAAA,OAAO,EAAEf,OADF;AAEPgB,UAAAA,KAAK,EAAEV;AAFA;AADgB,OAAf,CAFV;AAQAD,MAAAA,cAAc,CAAC,MAAMO,OAAO,CAACK,MAAR,CAAgBC,GAAD,IAASA,GAAG,CAACC,WAAJ,KAAoB,IAA5C,CAAP,CAAd;AACA,KAVD;;AAWAT,IAAAA,WAAW;AACXU,IAAAA,OAAO,CAACC,GAAR,CAAYjB,WAAZ;AACA,GAdQ,EAcN,CAACE,UAAD,CAdM,CAAT;AAeA,sBACC;AAAA,cACEF,WAAW,CAACkB,GAAZ,CAAiBC,OAAD,IAAa;AAC7B,0BACC;AAAA,gCACC;AAAA,oBAAKA,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAK,UAAA,GAAG,EAAG,GAAEf,MAAO,GAAEc,OAAO,CAACJ,WAAY;AAA1C;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGC;AAAA,oBAAII,OAAO,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAHD;AAAA,SAAUF,OAAO,CAACG,EAAlB;AAAA;AAAA;AAAA;AAAA,cADD;AAOA,KARA;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AAaA;;GAxCuB5B,M;UAKJF,W;;;KALIE,M","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\n\nexport default function Search() {\n\tconst url = 'https://api.themoviedb.org/3/search/movie?';\n\tconst API_KEY = process.env.REACT_APP_MOVIEDB_API_KEY;\n\n\tconst [movieSearch, setMovieSearch] = useState([]);\n\tconst queryInput = useSelector((state) => state.getMovie);\n\tconst images = 'https://image.tmdb.org/t/p/w500';\n\n\t// function handleClick() {\n\t// \tconsole.log(movie);\n\t// }\n\n\tuseEffect(() => {\n\t\tconst fetchsearch = async () => {\n\t\t\tconst {\n\t\t\t\tdata: { results },\n\t\t\t} = await axios.get(url, {\n\t\t\t\tparams: {\n\t\t\t\t\tapi_key: API_KEY,\n\t\t\t\t\tquery: queryInput,\n\t\t\t\t},\n\t\t\t});\n\t\t\tsetMovieSearch(() => results.filter((img) => img.poster_path !== null));\n\t\t};\n\t\tfetchsearch();\n\t\tconsole.log(movieSearch);\n\t}, [queryInput]);\n\treturn (\n\t\t<div>\n\t\t\t{movieSearch.map((details) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div key={details.id}>\n\t\t\t\t\t\t<h1>{details.title}</h1>\n\t\t\t\t\t\t<img src={`${images}${details.poster_path}`} />\n\t\t\t\t\t\t<p>{details.overview}</p>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}