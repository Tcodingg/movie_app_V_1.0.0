{"ast":null,"code":"var _jsxFileName = \"/Users/deprincio/Documents/2. Web Dev/Practice/React/Movie App/movie_app_v_1.0/src/ReUsableApiRequest.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReUsableApiRequest = props => {\n  _s();\n\n  const API_KEY = 'aa612f293de8cfae23f3d56312b5f998';\n  const pagesUrl = `https://api.themoviedb.org/3/search/movie?query=Avengers&api_key=${API_KEY}&page=1`;\n  const [movieInfo, setMovieInfo] = useState([]);\n  const images = 'https://image.tmdb.org/t/p/w500';\n  let url = props.url;\n  useEffect(() => {\n    async function fetch() {\n      const {\n        data: {\n          results\n        }\n      } = await axios.get(url);\n      setMovieInfo(() => results.filter(img => img.poster_path !== null));\n    }\n\n    fetch(); // console.log(movieInfo);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movieContent\",\n    children: movieInfo.map(movie => {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: `/Detail/${movie.id}`,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"images\",\n          src: `${images}${movie.poster_path}`,\n          alt: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 7\n        }, this)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 6\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ReUsableApiRequest, \"2jdZhFX5voZVxbN11R2tBwcg2P0=\");\n\n_c = ReUsableApiRequest;\nexport default ReUsableApiRequest;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReUsableApiRequest\");","map":{"version":3,"sources":["/Users/deprincio/Documents/2. Web Dev/Practice/React/Movie App/movie_app_v_1.0/src/ReUsableApiRequest.js"],"names":["React","useEffect","useState","axios","Link","ReUsableApiRequest","props","API_KEY","pagesUrl","movieInfo","setMovieInfo","images","url","fetch","data","results","get","filter","img","poster_path","map","movie","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;AAAA;;AACrC,QAAMC,OAAO,GAAG,kCAAhB;AAEA,QAAMC,QAAQ,GAAI,oEAAmED,OAAQ,SAA7F;AAEA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAMS,MAAM,GAAG,iCAAf;AACA,MAAIC,GAAG,GAAGN,KAAK,CAACM,GAAhB;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACf,mBAAeY,KAAf,GAAuB;AACtB,YAAM;AACLC,QAAAA,IAAI,EAAE;AAAEC,UAAAA;AAAF;AADD,UAEF,MAAMZ,KAAK,CAACa,GAAN,CAAUJ,GAAV,CAFV;AAGAF,MAAAA,YAAY,CAAC,MAAMK,OAAO,CAACE,MAAR,CAAgBC,GAAD,IAASA,GAAG,CAACC,WAAJ,KAAoB,IAA5C,CAAP,CAAZ;AACA;;AACDN,IAAAA,KAAK,GAPU,CAQf;AACA,GATQ,EASN,EATM,CAAT;AAWA,sBACC;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,cACEJ,SAAS,CAACW,GAAV,CAAeC,KAAD,IAAW;AACzB,0BACC,QAAC,IAAD;AAAqB,QAAA,EAAE,EAAG,WAAUA,KAAK,CAACC,EAAG,EAA7C;AAAA,+BACC;AACC,UAAA,SAAS,EAAC,QADX;AAEC,UAAA,GAAG,EAAG,GAAEX,MAAO,GAAEU,KAAK,CAACF,WAAY,EAFpC;AAGC,UAAA,GAAG,EAAC;AAHL;AAAA;AAAA;AAAA;AAAA;AADD,SAAWE,KAAK,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA,cADD;AASA,KAVA;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AAeA,CAnCD;;GAAMjB,kB;;KAAAA,kB;AAqCN,eAAeA,kBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nconst ReUsableApiRequest = (props) => {\n\tconst API_KEY = 'aa612f293de8cfae23f3d56312b5f998';\n\n\tconst pagesUrl = `https://api.themoviedb.org/3/search/movie?query=Avengers&api_key=${API_KEY}&page=1`;\n\n\tconst [movieInfo, setMovieInfo] = useState([]);\n\tconst images = 'https://image.tmdb.org/t/p/w500';\n\tlet url = props.url;\n\n\tuseEffect(() => {\n\t\tasync function fetch() {\n\t\t\tconst {\n\t\t\t\tdata: { results },\n\t\t\t} = await axios.get(url);\n\t\t\tsetMovieInfo(() => results.filter((img) => img.poster_path !== null));\n\t\t}\n\t\tfetch();\n\t\t// console.log(movieInfo);\n\t}, []);\n\n\treturn (\n\t\t<div className='movieContent'>\n\t\t\t{movieInfo.map((movie) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Link key={movie.id} to={`/Detail/${movie.id}`}>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tclassName='images'\n\t\t\t\t\t\t\tsrc={`${images}${movie.poster_path}`}\n\t\t\t\t\t\t\talt='none'\n\t\t\t\t\t\t></img>\n\t\t\t\t\t</Link>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n};\n\nexport default ReUsableApiRequest;\n"]},"metadata":{},"sourceType":"module"}